/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class Board_GameStateJNI */

#ifndef _Included_Board_GameStateJNI
#define _Included_Board_GameStateJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     Board_GameStateJNI
 * Method:    isActivePlayerWhite
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_Board_GameStateJNI_isActivePlayerWhite
  (JNIEnv *, jobject);

/*
 * Class:     Board_GameStateJNI
 * Method:    checkState
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Board_GameStateJNI_checkState
  (JNIEnv *, jobject);

/*
 * Class:     Board_GameStateJNI
 * Method:    resetGame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Board_GameStateJNI_resetGame
  (JNIEnv *, jobject);

/*
 * Class:     Board_GameStateJNI
 * Method:    resetBoard
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Board_GameStateJNI_resetBoard
  (JNIEnv *, jobject);

/*
 * Class:     Board_GameStateJNI
 * Method:    insertPiece
 * Signature: (IIZZ)V
 */
JNIEXPORT void JNICALL Java_Board_GameStateJNI_insertPiece
  (JNIEnv *, jobject, jint, jint, jboolean, jboolean);

/*
 * Class:     Board_GameStateJNI
 * Method:    handleClick
 * Signature: (II)V
 */
JNIEXPORT void JNICALL Java_Board_GameStateJNI_handleClick
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_GameStateJNI
 * Method:    hasFigure
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_Board_GameStateJNI_hasFigure
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_GameStateJNI
 * Method:    getFigureColor
 * Signature: (II)C
 */
JNIEXPORT jchar JNICALL Java_Board_GameStateJNI_getFigureColor
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_GameStateJNI
 * Method:    isQueen
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_Board_GameStateJNI_isQueen
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_GameStateJNI
 * Method:    mustAttack
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_Board_GameStateJNI_mustAttack
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_GameStateJNI
 * Method:    isSelected
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_Board_GameStateJNI_isSelected
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_GameStateJNI
 * Method:    isValidMove
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_Board_GameStateJNI_isValidMove
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     Board_GameStateJNI
 * Method:    getRowsCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Board_GameStateJNI_getRowsCount
  (JNIEnv *, jobject);

/*
 * Class:     Board_GameStateJNI
 * Method:    getColumnsCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_Board_GameStateJNI_getColumnsCount
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
